# Copyright 2018 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Code generated by SyzDescribe. DO NOT EDIT.
# Code generated from linux v5.12

meta arches["amd64"]

# driver found at module init function switchtec_init() in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/switch/switchtec.c#L1732
# call chain: 
# 00: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/switch/switchtec.c#L1747
# 01: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/pci-driver.c#L1384
# 02: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/pci-driver.c#L434
# 03: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/pci-driver.c#L391
# 04: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/pci-driver.c#L366
# 05: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/pci-driver.c#L309
# 06: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/switch/switchtec.c#L1599
# 07: https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/switch/switchtec.c#L1332

# syscalls handler structure in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/switch/switchtec.c#L1332
# find handler ioctl: switchtec_dev_ioctl
# find handler open: switchtec_dev_open
# find handler read: switchtec_dev_read
# find handler write: switchtec_dev_write

resource fd_9633006760711378694_fd[fd]

# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/switch/switchtec.c#L1329
syz_open_dev$syz_describe_9633006760711378694_open_0(dev ptr[in, string["/dev/switchtec#"]], id intptr, flags flags[open_flags]) fd_9633006760711378694_fd

ioctl$syz_describe_9633006760711378694_2148554560_0(fd fd_9633006760711378694_fd, cmd const[2148554560], arg ptr[out, struct_arch_uprobe_task_9633006760711378694])
ioctl$syz_describe_9633006760711378694_2174244674_0(fd fd_9633006760711378694_fd, cmd const[2174244674], arg ptr[out, struct_switchtec_ioctl_event_summary_9633006760711378694])
ioctl$syz_describe_9633006760711378694_2228770626_0(fd fd_9633006760711378694_fd, cmd const[2228770626], arg ptr[out, struct_switchtec_ioctl_event_summary_9633006760711378694])
ioctl$syz_describe_9633006760711378694_3222034244_0(fd fd_9633006760711378694_fd, cmd const[3222034244], arg ptr[inout, struct_kernel_symbol_9633006760711378694])
ioctl$syz_describe_9633006760711378694_3222034245_0(fd fd_9633006760711378694_fd, cmd const[3222034245], arg ptr[inout, struct_kernel_symbol_9633006760711378694])
ioctl$syz_describe_9633006760711378694_3222296385_0(fd fd_9633006760711378694_fd, cmd const[3222296385], arg ptr[inout, struct_aer_header_log_regs_9633006760711378694])
ioctl$syz_describe_9633006760711378694_3223869251_0(fd fd_9633006760711378694_fd, cmd const[3223869251], arg ptr[inout, struct_switchtec_ioctl_event_ctl_9633006760711378694])

struct_kernel_symbol_9633006760711378694 {
    field_0    int32
    field_1    int32
    field_2    int32
}
struct_arch_uprobe_task_9633006760711378694 {
    field_0    int64
    field_1    int32
    field_2    int32
}
struct_aer_header_log_regs_9633006760711378694 {
    field_0    int32
    field_1    int32
    field_2    int32
    field_3    int32
}
struct_switchtec_ioctl_event_summary_9633006760711378694 {
    field_0    int64
    field_1    int64
    field_2    int32
    field_3    int32
    field_4    array[int32, 48]
    field_5    array[int32, 255]
}
struct_switchtec_ioctl_event_ctl_9633006760711378694 {
    field_0    int32
    field_1    int32
    field_2    int32
    field_3    int32
    field_4    int32
    field_5    array[int32, 5]
}
