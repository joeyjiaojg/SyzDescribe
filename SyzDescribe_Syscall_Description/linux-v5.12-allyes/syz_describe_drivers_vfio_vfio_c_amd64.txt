# Copyright 2018 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Code generated by SyzDescribe. DO NOT EDIT.
# Code generated from linux v5.12

meta arches["amd64"]

# driver found at module init function vfio_init() in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2373
# call chain: 
# 00: https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2384

# syscalls handler structure in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2384
# find handler ioctl: vfio_fops_unl_ioctl
# find handler open: vfio_fops_open
# find handler read: vfio_fops_read
# find handler write: vfio_fops_write

resource fd_13842644788536145497_fd[fd]

# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2384
openat$syz_describe_13842644788536145497_open_0(fd const[AT_FDCWD], file ptr[in, string["/dev/vfio"]], flags flags[open_flags], mode const[0]) fd_13842644788536145497_fd

ioctl$syz_describe_13842644788536145497_15204(fd fd_13842644788536145497_fd, cmd const[15204], arg ptr[in, array[int8]])
ioctl$syz_describe_13842644788536145497_15205(fd fd_13842644788536145497_fd, cmd const[15205], arg ptr[in, array[int8]])
ioctl$syz_describe_13842644788536145497_15206(fd fd_13842644788536145497_fd, cmd const[15206], arg ptr[in, array[int8]])

# driver found at module init function vfio_init() in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2373
# call chain: 
# 00: https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2403

# syscalls handler structure in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L2403
# find handler ioctl: vfio_group_fops_unl_ioctl
# find handler open: vfio_group_fops_open

resource fd_3512241794086366674_fd[fd]

# not get possible device file name
openat$syz_describe_3512241794086366674_open_0(fd const[AT_FDCWD], file ptr[in, string["/dev/incorrect_device_file_name"]], flags flags[open_flags], mode const[0]) fd_3512241794086366674_fd

ioctl$syz_describe_3512241794086366674_15207_0(fd fd_3512241794086366674_fd, cmd const[15207], arg ptr[inout, struct_util_est_3512241794086366674])
ioctl$syz_describe_3512241794086366674_15208(fd fd_3512241794086366674_fd, cmd const[15208], arg ptr[in, array[int8]])
ioctl$syz_describe_3512241794086366674_15209(fd fd_3512241794086366674_fd, cmd const[15209], arg ptr[in, array[int8]])
ioctl$syz_describe_3512241794086366674_15210(fd fd_3512241794086366674_fd, cmd const[15210], arg ptr[in, array[int8]])
# ioctl$syz_describe_3512241794086366674_15210(fd fd_3512241794086366674_fd, cmd const[15210], arg ptr[in, array[int8]]) fd_9368187651552181680_cmd_15210_fd

struct_util_est_3512241794086366674 {
    field_0    int32
    field_1    int32
}
# driver found at (not module init) function vfio_group_fops_unl_ioctl() in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L1502
# parent id hash: 3512241794086366674
# call chain: 
# 00: https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L1560
# 01: https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L1474

# syscalls handler structure in https://elixir.bootlin.com/linux/v5.12/source/drivers/vfio/vfio.c#L1474
# find handler ioctl: vfio_device_fops_unl_ioctl
# find handler read: vfio_device_fops_read
# find handler write: vfio_device_fops_write

#  resource fd_9368187651552181680_cmd_15210_fd[fd]

# non open fd

